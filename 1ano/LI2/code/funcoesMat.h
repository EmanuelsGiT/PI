/**
 * @file Ficheiro que contém as funções matemáticas.
 */


int isInt(int i, int numchar[]);
void swap(int a[], int i, int j);
void swapd(double a[], int i, int j);
int procura(char x, char t[], int N);
void removeElemStack(double stack[], int top, int numchar[], int pos);
void longtoa(double i, char t[]);
int concatenarSomaComArray(int x, int end, int top, double stack[], int numchar[]);
int soma(int top, double stack[], int numchar[], char stackAux[][10240]);
int concatenarNArrays(int ***topSDepois, double x, int top, int topS, double y, int end, double stack[], int numchar[], char stackAux[][10240]);
int concatenarNStrings(int x,int top, double stack[], char stackAux[][10240]);
int subStringPorSubstring(int ***topSDepois, double x, double y, int top, int topS, double stack[], int numchar[], char stackAux[][10240]);
int eliminaPrimeiroElemArray(int ***topSDepois,double x, int end, int top, int topS, double stack[], int numchar[], char stackAux[][10240]);
int eliminaPrimeiroElemString(int ***topSDepois, double k,int top, int topS, double stack[], int numchar[], char stackAux[][10240]);
int eliminaUltimoElemArray(double x,int end, int top, double stack[], int numchar[]);
int eliminaUltimoElemString(int ***topSDepois,double k, int top, int topS, double stack[], int numchar[], char stackAux[][10240]);
int tamanhoOuRange(int top, double stack[], int numchar[], char stackAux[][10240]);
int cardinal(int top, double stack[], int numchar[], char stackAux[][10240]);
int dolar(int top, double stack[], int numchar[], char stackAux[][10240]);
int pontoEVirgula(int top, double stack[], int numchar[]);
int converteInteiro(char c, int top, double stack[], int numchar[], char stackAux[][10240]);
int duplicar(int top, double stack[], int numchar[]);
int trocaElemComArray(double x, int end, int top, double stack[], int numchar[]);
int trocaArrayComElem(double x, int end, int top, double stack[], int numchar[]);
int trocaBlocoComElem(int top, double stack[], int numchar[]);
int converteFloat(char c, int top, double stack[], int numchar[], char stackAux[][10240]);
int caseE (char c, int top, double stack[]);
int simbIgual(int **topSDepois,int top, int topS, double stack[], int numchar[], char stackAux[][10240]);
int simbPontoExclamacao(char c1, char c2, int top, double stack[], int numchar[], char stackAux[][10240]);
int simbPontoInterrogacao(int top, double stack[], int numchar[]);
int simbMaiorStrings(int top, double stack[], int numchar[], char stackAux[][10240]);
int simbMaior(int **topSMaior,int top, int topS, double stack[], int numchar[], char stackAux[][10240]);
int simbMenorStrings(int top, double stack[], int numchar[], char stackAux[][10240]);
int simbMenor(int **topSDepois,int top, int topS, double stack[], int numchar[], char stackAux[][10240]);
int converteParaString(int top, int topS, double stack[], int numchar[], char stackAux[][10240]);
int simbBarra(int** topSDepois,int top, int topS, double stack[], int numchar[], char stackAux[][10240]);
int simAbrirParenteses(int **topSDepois,int top, int topS, double stack[], int numchar[], char stackAux[][10240]);
int simbFecharParenteses(int **topSDepois,int top, int topS, double stack[], int numchar[], char stackAux[][10240]);
int simbDuasAspas(int *topSDepois, int a, char n[], int top, int topS, double stack[], int numchar[], char stackAux[][10240]);
void simbDoisPontos(char c, double arrayAZ[][20], double numAZ[], int ncArrAZ[][20], int indAZ[], int top, double stack[], int numchar[]);
int simbS(int **topSDepois,char c, int top, int topS, double stack[], int numchar[], char stackAux[][10240]);
int simbN(int **topSDepois,char c, int top, int topS, double stack[], int numchar[], char stackAux[][10240]);
int funcoesLogicas(int *topSDepois,int *aDepois,int a, char n[], int top, int topS, double stack[], int numchar[], char stackAux[][10240]);
int conversoes(int *topSDepois, int a, char n[], int top, int topS, double stack[], int numchar[], char stackAux[][10240]);
int InputOutput(int *topSDepois,int a, char n[], int top, int topS, double stack[], int numchar[], char stackAux[][10240]);
int arrays(int *aDepois, int *topSDepois, int a, char n[], int top, int topS, double stack[], int numchar[], char stackAux[][10240]);
int expressoesMat(int *topSDepois,int a, char n[], int top, int topS, double stack[], int numchar[], char stackAux[][10240]);
int simbVezes(int **topSDepois, int top, int topS, double stack[], int numchar[], char stackAux[][10240], char nSeguro[]);
int simbVirgula(int top, double stack[], int numchar[], char stackAux[][10240], char nSeguro[]);
int simbPercentagem(int top, double stack[], int numchar[], char stackAux[][10240], char nSeguro[]);
int simbTilNC8(int top, double stack[], int numchar[], char stackAux[][10240], char nSeguro[]);
int simbTilBloco(int top, double stack[], int numchar[], char stackAux[][10240], char nSeguro[]);
int simbTil(int top, double stack[], int numchar[], char stackAux[][10240], char nSeguro[]);
int simbDuasBarrasArr(double x,double end,int top, double stack[], int numchar[]);
int simbDuasBarras(int top, double stack[], int numchar[]);
int funcoesrecursivas(int *topSDepois, int a, char n[],int top, int topS, double stack[], int numchar[], char stackAux[][10240], char nSeguro[]);
